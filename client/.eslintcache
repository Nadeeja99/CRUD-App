[{"F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\index.js":"1","F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\App.js":"2","F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\serviceWorker.js":"3","F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\components\\add-tutorial.component.js":"4","F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\components\\tutorials-list.component.js":"5","F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\components\\tutorial.component.js":"6","F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\components\\upload-files.component.js":"7","F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\services\\tutorial.service.js":"8","F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\services\\upload-files.service.js":"9","F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\http-common.js":"10"},{"size":311,"mtime":1610528691598,"results":"11","hashOfConfig":"12"},{"size":1671,"mtime":1610692311182,"results":"13","hashOfConfig":"12"},{"size":5868,"mtime":1610361667408,"results":"14","hashOfConfig":"12"},{"size":2832,"mtime":1610359931050,"results":"15","hashOfConfig":"12"},{"size":4715,"mtime":1610360230755,"results":"16","hashOfConfig":"12"},{"size":5156,"mtime":1610360340868,"results":"17","hashOfConfig":"12"},{"size":2952,"mtime":1610690320481,"results":"18","hashOfConfig":"12"},{"size":588,"mtime":1610359673255,"results":"19","hashOfConfig":"12"},{"size":438,"mtime":1610689378454,"results":"20","hashOfConfig":"12"},{"size":164,"mtime":1610359616440,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"18osx6q",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\index.js",[],["44","45"],"F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\App.js",[],"F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\serviceWorker.js",[],"F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\components\\add-tutorial.component.js",[],"F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\components\\tutorials-list.component.js",[],"F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\components\\tutorial.component.js",[],"F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\components\\upload-files.component.js",["46"],"import React, { Component } from \"react\";\r\nimport UploadService from \"../services/upload-files.service\";\r\n\r\nexport default class UploadFiles extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        selectedFiles: undefined,\r\n        currentFile: undefined,\r\n        progress: 0,\r\n        message: \"\",\r\n  \r\n        fileInfos: [],\r\n      };\r\n\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.setState({\r\n      selectedFiles: event.target.files,\r\n    });\r\n  }\r\n\r\n  upload() {\r\n    let currentFile = this.state.selectedFiles[0];\r\n\r\n    this.setState({\r\n      progress: 0,\r\n      currentFile: currentFile,\r\n    });\r\n\r\n    UploadService.upload(currentFile, (event) => {\r\n      this.setState({\r\n        progress: Math.round((100 * event.loaded) / event.total),\r\n      });\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          message: response.data.message,\r\n        });\r\n        return UploadService.getFiles();\r\n      })\r\n      .then((files) => {\r\n        this.setState({\r\n          fileInfos: files.data,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          progress: 0,\r\n          message: \"Could not upload the file!\",\r\n          currentFile: undefined,\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      selectedFiles: undefined,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    UploadService.getFiles().then((response) => {\r\n      this.setState({\r\n        fileInfos: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n  }render() {\r\n    const {\r\n      selectedFiles,\r\n      currentFile,\r\n      progress,\r\n      message,\r\n      fileInfos,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentFile && (\r\n          <div className=\"progress\">\r\n            <div\r\n              className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n              role=\"progressbar\"\r\n              aria-valuenow={progress}\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              style={{ width: progress + \"%\" }}\r\n            >\r\n              {progress}%\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <label className=\"btn btn-default\">\r\n          <input type=\"file\" onChange={this.selectFile} />\r\n        </label>\r\n\r\n        <button className=\"btn btn-success\"\r\n          disabled={!selectedFiles}\r\n          onClick={this.upload}\r\n        >\r\n          Upload\r\n        </button>\r\n\r\n        <div className=\"alert alert-light\" role=\"alert\">\r\n          {message}\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">List of Files</div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {fileInfos &&\r\n              fileInfos.map((file, index) => (\r\n                <li className=\"list-group-item\" key={index}>\r\n                  <a href={file.url}>{file.name}</a>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\services\\tutorial.service.js",[],"F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\services\\upload-files.service.js",[],"F:\\Tutorials\\NodeJs Tutorials\\CRUD app\\frontend\\src\\http-common.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":72,"column":4,"nodeType":"53","messageId":"54","endLine":126,"endColumn":4},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-dupe-class-members","Duplicate name 'render'.","MethodDefinition","unexpected","no-global-assign","no-unsafe-negation"]